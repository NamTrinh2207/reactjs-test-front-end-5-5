{"ast":null,"code":"var _jsxFileName = \"D:\\\\Module_5\\\\reactjs-test-front-end-5-5\\\\src\\\\components\\\\Test-firebase.js\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = Yup.object().shape({\n  image: Yup.mixed().required('Image is required').test('fileSize', 'Image size should be less than 10MB', value => value && value.size <= 10000000).test('fileType', 'Unsupported file type', value => value && ['image/png', 'image/jpeg'].includes(value.type))\n});\n\nconst FirebaseStorageUploader = () => {\n  const handleUpload = async values => {\n    const formData = new FormData();\n    formData.append('file', values.image);\n\n    try {\n      const response = await fetch('/api/upload-image', {\n        method: 'POST',\n        body: formData\n      });\n\n      if (response.ok) {\n        console.log('Image uploaded successfully');\n      } else {\n        console.error('Failed to upload image');\n      }\n    } catch (error) {\n      console.error('Failed to upload image', error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Upload image to Firebase Storage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        image: null\n      },\n      validationSchema: validationSchema,\n      onSubmit: handleUpload,\n      children: _ref => {\n        let {\n          setFieldValue,\n          isSubmitting\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: \"Choose image:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              id: \"image\",\n              name: \"image\",\n              type: \"file\",\n              onChange: event => {\n                setFieldValue('image', event.currentTarget.files[0]);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"image\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            disabled: isSubmitting,\n            children: \"Upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 21\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n};\n\n_c = FirebaseStorageUploader;\nexport default FirebaseStorageUploader;\n\nvar _c;\n\n$RefreshReg$(_c, \"FirebaseStorageUploader\");","map":{"version":3,"names":["React","Formik","Form","Field","ErrorMessage","Yup","validationSchema","object","shape","image","mixed","required","test","value","size","includes","type","FirebaseStorageUploader","handleUpload","values","formData","FormData","append","response","fetch","method","body","ok","console","log","error","setFieldValue","isSubmitting","event","currentTarget","files"],"sources":["D:/Module_5/reactjs-test-front-end-5-5/src/components/Test-firebase.js"],"sourcesContent":["import React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst validationSchema = Yup.object().shape({\r\n    image: Yup.mixed()\r\n        .required('Image is required')\r\n        .test('fileSize', 'Image size should be less than 10MB', (value) => value && value.size <= 10000000)\r\n        .test('fileType', 'Unsupported file type', (value) => value && ['image/png', 'image/jpeg'].includes(value.type))\r\n});\r\n\r\nconst FirebaseStorageUploader = () => {\r\n    const handleUpload = async (values) => {\r\n        const formData = new FormData();\r\n        formData.append('file', values.image);\r\n        try {\r\n            const response = await fetch('/api/upload-image', {\r\n                method: 'POST',\r\n                body: formData\r\n            });\r\n            if (response.ok) {\r\n                console.log('Image uploaded successfully');\r\n            } else {\r\n                console.error('Failed to upload image');\r\n            }\r\n        } catch (error) {\r\n            console.error('Failed to upload image', error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Upload image to Firebase Storage</h1>\r\n            <Formik\r\n                initialValues={{\r\n                    image: null\r\n                }}\r\n                validationSchema={validationSchema}\r\n                onSubmit={handleUpload}\r\n            >\r\n                {({ setFieldValue, isSubmitting }) => (\r\n                    <Form>\r\n                        <div>\r\n                            <label htmlFor=\"image\">Choose image:</label>\r\n                            <Field\r\n                                id=\"image\"\r\n                                name=\"image\"\r\n                                type=\"file\"\r\n                                onChange={(event) => {\r\n                                    setFieldValue('image', event.currentTarget.files[0]);\r\n                                }}\r\n                            />\r\n                            <ErrorMessage name=\"image\" />\r\n                        </div>\r\n                        <button type=\"submit\" disabled={isSubmitting}>\r\n                            Upload\r\n                        </button>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default FirebaseStorageUploader;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;AAEA,MAAMC,gBAAgB,GAAGD,GAAG,CAACE,MAAJ,GAAaC,KAAb,CAAmB;EACxCC,KAAK,EAAEJ,GAAG,CAACK,KAAJ,GACFC,QADE,CACO,mBADP,EAEFC,IAFE,CAEG,UAFH,EAEe,qCAFf,EAEuDC,KAAD,IAAWA,KAAK,IAAIA,KAAK,CAACC,IAAN,IAAc,QAFxF,EAGFF,IAHE,CAGG,UAHH,EAGe,uBAHf,EAGyCC,KAAD,IAAWA,KAAK,IAAI,CAAC,WAAD,EAAc,YAAd,EAA4BE,QAA5B,CAAqCF,KAAK,CAACG,IAA3C,CAH5D;AADiC,CAAnB,CAAzB;;AAOA,MAAMC,uBAAuB,GAAG,MAAM;EAClC,MAAMC,YAAY,GAAG,MAAOC,MAAP,IAAkB;IACnC,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;IACAD,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,MAAM,CAACV,KAA/B;;IACA,IAAI;MACA,MAAMc,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAD,EAAsB;QAC9CC,MAAM,EAAE,MADsC;QAE9CC,IAAI,EAAEN;MAFwC,CAAtB,CAA5B;;MAIA,IAAIG,QAAQ,CAACI,EAAb,EAAiB;QACbC,OAAO,CAACC,GAAR,CAAY,6BAAZ;MACH,CAFD,MAEO;QACHD,OAAO,CAACE,KAAR,CAAc,wBAAd;MACH;IACJ,CAVD,CAUE,OAAOA,KAAP,EAAc;MACZF,OAAO,CAACE,KAAR,CAAc,wBAAd,EAAwCA,KAAxC;IACH;EACJ,CAhBD;;EAkBA,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ,eAEI,QAAC,MAAD;MACI,aAAa,EAAE;QACXrB,KAAK,EAAE;MADI,CADnB;MAII,gBAAgB,EAAEH,gBAJtB;MAKI,QAAQ,EAAEY,YALd;MAAA,UAOK;QAAA,IAAC;UAAEa,aAAF;UAAiBC;QAAjB,CAAD;QAAA,oBACG,QAAC,IAAD;UAAA,wBACI;YAAA,wBACI;cAAO,OAAO,EAAC,OAAf;cAAA;YAAA;cAAA;cAAA;cAAA;YAAA,QADJ,eAEI,QAAC,KAAD;cACI,EAAE,EAAC,OADP;cAEI,IAAI,EAAC,OAFT;cAGI,IAAI,EAAC,MAHT;cAII,QAAQ,EAAGC,KAAD,IAAW;gBACjBF,aAAa,CAAC,OAAD,EAAUE,KAAK,CAACC,aAAN,CAAoBC,KAApB,CAA0B,CAA1B,CAAV,CAAb;cACH;YANL;cAAA;cAAA;cAAA;YAAA,QAFJ,eAUI,QAAC,YAAD;cAAc,IAAI,EAAC;YAAnB;cAAA;cAAA;cAAA;YAAA,QAVJ;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAaI;YAAQ,IAAI,EAAC,QAAb;YAAsB,QAAQ,EAAEH,YAAhC;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QAbJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADH;MAAA;IAPL;MAAA;MAAA;MAAA;IAAA,QAFJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAgCH,CAnDD;;KAAMf,uB;AAqDN,eAAeA,uBAAf"},"metadata":{},"sourceType":"module"}