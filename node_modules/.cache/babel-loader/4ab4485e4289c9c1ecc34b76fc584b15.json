{"ast":null,"code":"var _jsxFileName = \"D:\\\\Module_5\\\\reactjs-test-front-end-5-5\\\\src\\\\components\\\\SignUpForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Formik, Field, ErrorMessage } from 'formik';\nimport axios from 'axios';\nimport { useNavigate } from \"react-router-dom\";\nimport * as yup from \"yup\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignUpForm = () => {\n  _s();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: '',\n      roleName: ''\n    },\n    validationSchema: yup.object({\n      username: yup.string().max(20, \"Must be 20 character or less\").required(\"required\"),\n      password: yup.string().email(\"invalid email or address\").required(\"required\")\n    }),\n    onSubmit: values => {\n      axios.post(\"http://localhost:8080/api/signup\", values).then(() => {\n        alert(\"Sign up success \");\n        navigate(\"/login\");\n      }).catch(function (error) {\n        console.log(error);\n        alert(\"Registration failed \");\n      });\n    },\n    children: formik => /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: formik.handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Field, {\n        name: \"username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: 'username'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        name: \"password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n        name: 'password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Field, {\n        as: \"select\",\n        name: 'roleName',\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ROLE_USER\",\n          children: \"User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"ROLE_ADMIN\",\n          children: \"Admin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Signup Form\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SignUpForm, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SignUpForm;\nexport default SignUpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUpForm\");","map":{"version":3,"names":["React","Formik","Field","ErrorMessage","axios","useNavigate","yup","SignUpForm","navigate","username","password","roleName","object","string","max","required","email","values","post","then","alert","catch","error","console","log","formik","handleSubmit"],"sources":["D:/Module_5/reactjs-test-front-end-5-5/src/components/SignUpForm.js"],"sourcesContent":["import React from 'react';\r\nimport {Formik, Field, ErrorMessage} from 'formik';\r\nimport axios from 'axios';\r\nimport {useNavigate} from \"react-router-dom\";\r\nimport * as yup from \"yup\";\r\n\r\nconst SignUpForm = () => {\r\n    const navigate = useNavigate();\r\n    return (\r\n        <Formik\r\n            initialValues={{\r\n                username: '',\r\n                password: '',\r\n                roleName: '',\r\n            }}\r\n            validationSchema={\r\n                yup.object({\r\n                    username: yup.string()\r\n                        .max(20, \"Must be 20 character or less\")\r\n                        .required(\"required\"),\r\n                    password: yup.string()\r\n                        .email(\"invalid email or address\")\r\n                        .required(\"required\"),\r\n                })\r\n            }\r\n            onSubmit={(values) => {\r\n                axios.post(\"http://localhost:8080/api/signup\", values)\r\n                    .then(() => {\r\n                        alert(\"Sign up success \")\r\n                        navigate(\"/login\")\r\n                    })\r\n                    .catch(function (error) {\r\n                        console.log(error)\r\n                        alert(\"Registration failed \")\r\n                    })\r\n            }}>\r\n            {formik => (\r\n                <form onSubmit={formik.handleSubmit}>\r\n                    <Field name='username'></Field>\r\n                    <ErrorMessage name={'username'}></ErrorMessage>\r\n\r\n                    <Field name='password'></Field>\r\n                    <ErrorMessage name={'password'}></ErrorMessage>\r\n\r\n                    <Field as=\"select\" name={'roleName'}>\r\n                        <option value=\"ROLE_USER\">User</option>\r\n                        <option value=\"ROLE_ADMIN\">Admin</option>\r\n                    </Field>\r\n                    <button>Signup Form</button>\r\n                </form>\r\n            )}\r\n        </Formik>\r\n    )\r\n};\r\n\r\nexport default SignUpForm;\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,KAAhB,EAAuBC,YAAvB,QAA0C,QAA1C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,kBAA1B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACrB,MAAMC,QAAQ,GAAGH,WAAW,EAA5B;EACA,oBACI,QAAC,MAAD;IACI,aAAa,EAAE;MACXI,QAAQ,EAAE,EADC;MAEXC,QAAQ,EAAE,EAFC;MAGXC,QAAQ,EAAE;IAHC,CADnB;IAMI,gBAAgB,EACZL,GAAG,CAACM,MAAJ,CAAW;MACPH,QAAQ,EAAEH,GAAG,CAACO,MAAJ,GACLC,GADK,CACD,EADC,EACG,8BADH,EAELC,QAFK,CAEI,UAFJ,CADH;MAIPL,QAAQ,EAAEJ,GAAG,CAACO,MAAJ,GACLG,KADK,CACC,0BADD,EAELD,QAFK,CAEI,UAFJ;IAJH,CAAX,CAPR;IAgBI,QAAQ,EAAGE,MAAD,IAAY;MAClBb,KAAK,CAACc,IAAN,CAAW,kCAAX,EAA+CD,MAA/C,EACKE,IADL,CACU,MAAM;QACRC,KAAK,CAAC,kBAAD,CAAL;QACAZ,QAAQ,CAAC,QAAD,CAAR;MACH,CAJL,EAKKa,KALL,CAKW,UAAUC,KAAV,EAAiB;QACpBC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACAF,KAAK,CAAC,sBAAD,CAAL;MACH,CARL;IASH,CA1BL;IAAA,UA2BKK,MAAM,iBACH;MAAM,QAAQ,EAAEA,MAAM,CAACC,YAAvB;MAAA,wBACI,QAAC,KAAD;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI,QAAC,YAAD;QAAc,IAAI,EAAE;MAApB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAII,QAAC,KAAD;QAAO,IAAI,EAAC;MAAZ;QAAA;QAAA;QAAA;MAAA,QAJJ,eAKI,QAAC,YAAD;QAAc,IAAI,EAAE;MAApB;QAAA;QAAA;QAAA;MAAA,QALJ,eAOI,QAAC,KAAD;QAAO,EAAE,EAAC,QAAV;QAAmB,IAAI,EAAE,UAAzB;QAAA,wBACI;UAAQ,KAAK,EAAC,WAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAEI;UAAQ,KAAK,EAAC,YAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFJ;MAAA;QAAA;QAAA;QAAA;MAAA,QAPJ,eAWI;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAXJ;IAAA;MAAA;MAAA;MAAA;IAAA;EA5BR;IAAA;IAAA;IAAA;EAAA,QADJ;AA6CH,CA/CD;;GAAMnB,U;UACeF,W;;;KADfE,U;AAiDN,eAAeA,UAAf"},"metadata":{},"sourceType":"module"}