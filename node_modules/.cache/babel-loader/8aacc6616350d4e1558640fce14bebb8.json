{"ast":null,"code":"var _jsxFileName = \"D:\\\\Module_5\\\\reactjs-test-front-end-5-5\\\\src\\\\components\\\\LoginForm.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LoginForm = () => {\n  const handleSubmit = values => {\n    return new Promise((resolve, reject) => {\n      axios.get('http://localhost:8080/api/login', {\n        auth: {\n          username: values.username,\n          password: values.password\n        }\n      }).then(response => {\n        resolve(response.data);\n      }).catch(error => {\n        reject(error.response.data);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validationSchema: Yup.object({\n      username: Yup.string().required('Required'),\n      password: Yup.string().required('Required')\n    }),\n    onSubmit: async (values, _ref) => {\n      let {\n        setSubmitting\n      } = _ref;\n\n      try {\n        const data = await handleSubmit(values);\n        console.log(data);\n      } catch (error) {\n        console.log(error);\n      } finally {\n        setSubmitting(false);\n      }\n    },\n    children: _ref2 => {\n      let {\n        isSubmitting\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Username:\", /*#__PURE__*/_jsxDEV(Field, {\n            type: \"text\",\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Password:\", /*#__PURE__*/_jsxDEV(Field, {\n            type: \"password\",\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n            name: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: isSubmitting,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 9\n  }, this);\n};\n\n_c = LoginForm;\nexport default LoginForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginForm\");","map":{"version":3,"names":["React","axios","Formik","Form","Field","ErrorMessage","Yup","LoginForm","handleSubmit","values","Promise","resolve","reject","get","auth","username","password","then","response","data","catch","error","object","string","required","setSubmitting","console","log","isSubmitting"],"sources":["D:/Module_5/reactjs-test-front-end-5-5/src/components/LoginForm.js"],"sourcesContent":["import React from 'react';\r\nimport axios from 'axios';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nconst LoginForm = () => {\r\n    const handleSubmit = (values) => {\r\n        return new Promise((resolve, reject) => {\r\n            axios.get('http://localhost:8080/api/login', {\r\n                auth: {\r\n                    username: values.username,\r\n                    password: values.password\r\n                }\r\n            })\r\n                .then(response => {\r\n                    resolve(response.data);\r\n                })\r\n                .catch(error => {\r\n                    reject(error.response.data);\r\n                });\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Formik\r\n            initialValues={{ username: '', password: '' }}\r\n            validationSchema={Yup.object({\r\n                username: Yup.string().required('Required'),\r\n                password: Yup.string().required('Required')\r\n            })}\r\n            onSubmit={async (values, { setSubmitting }) => {\r\n                try {\r\n                    const data = await handleSubmit(values);\r\n                    console.log(data);\r\n                } catch (error) {\r\n                    console.log(error);\r\n                } finally {\r\n                    setSubmitting(false);\r\n                }\r\n            }}\r\n        >\r\n            {({ isSubmitting }) => (\r\n                <Form>\r\n                    <label>\r\n                        Username:\r\n                        <Field type=\"text\" name=\"username\" />\r\n                        <ErrorMessage name=\"username\" />\r\n                    </label>\r\n                    <label>\r\n                        Password:\r\n                        <Field type=\"password\" name=\"password\" />\r\n                        <ErrorMessage name=\"password\" />\r\n                    </label>\r\n                    <button type=\"submit\" disabled={isSubmitting}>\r\n                        Login\r\n                    </button>\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;EACpB,MAAMC,YAAY,GAAIC,MAAD,IAAY;IAC7B,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;MACpCX,KAAK,CAACY,GAAN,CAAU,iCAAV,EAA6C;QACzCC,IAAI,EAAE;UACFC,QAAQ,EAAEN,MAAM,CAACM,QADf;UAEFC,QAAQ,EAAEP,MAAM,CAACO;QAFf;MADmC,CAA7C,EAMKC,IANL,CAMUC,QAAQ,IAAI;QACdP,OAAO,CAACO,QAAQ,CAACC,IAAV,CAAP;MACH,CARL,EASKC,KATL,CASWC,KAAK,IAAI;QACZT,MAAM,CAACS,KAAK,CAACH,QAAN,CAAeC,IAAhB,CAAN;MACH,CAXL;IAYH,CAbM,CAAP;EAcH,CAfD;;EAiBA,oBACI,QAAC,MAAD;IACI,aAAa,EAAE;MAAEJ,QAAQ,EAAE,EAAZ;MAAgBC,QAAQ,EAAE;IAA1B,CADnB;IAEI,gBAAgB,EAAEV,GAAG,CAACgB,MAAJ,CAAW;MACzBP,QAAQ,EAAET,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,UAAtB,CADe;MAEzBR,QAAQ,EAAEV,GAAG,CAACiB,MAAJ,GAAaC,QAAb,CAAsB,UAAtB;IAFe,CAAX,CAFtB;IAMI,QAAQ,EAAE,OAAOf,MAAP,WAAqC;MAAA,IAAtB;QAAEgB;MAAF,CAAsB;;MAC3C,IAAI;QACA,MAAMN,IAAI,GAAG,MAAMX,YAAY,CAACC,MAAD,CAA/B;QACAiB,OAAO,CAACC,GAAR,CAAYR,IAAZ;MACH,CAHD,CAGE,OAAOE,KAAP,EAAc;QACZK,OAAO,CAACC,GAAR,CAAYN,KAAZ;MACH,CALD,SAKU;QACNI,aAAa,CAAC,KAAD,CAAb;MACH;IACJ,CAfL;IAAA,UAiBK;MAAA,IAAC;QAAEG;MAAF,CAAD;MAAA,oBACG,QAAC,IAAD;QAAA,wBACI;UAAA,qCAEI,QAAC,KAAD;YAAO,IAAI,EAAC,MAAZ;YAAmB,IAAI,EAAC;UAAxB;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,YAAD;YAAc,IAAI,EAAC;UAAnB;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ,eAMI;UAAA,qCAEI,QAAC,KAAD;YAAO,IAAI,EAAC,UAAZ;YAAuB,IAAI,EAAC;UAA5B;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI,QAAC,YAAD;YAAc,IAAI,EAAC;UAAnB;YAAA;YAAA;YAAA;UAAA,QAHJ;QAAA;UAAA;UAAA;UAAA;QAAA,QANJ,eAWI;UAAQ,IAAI,EAAC,QAAb;UAAsB,QAAQ,EAAEA,YAAhC;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAXJ;MAAA;QAAA;QAAA;QAAA;MAAA,QADH;IAAA;EAjBL;IAAA;IAAA;IAAA;EAAA,QADJ;AAqCH,CAvDD;;KAAMrB,S;AAyDN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}